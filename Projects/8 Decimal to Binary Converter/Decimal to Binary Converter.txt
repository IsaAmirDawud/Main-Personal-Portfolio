In this project, I will build a decimal and binary and learn about both number systems. I will also learn about recurision by using it to perform the conversations. I will start by storing elements in variables. The elements that I will save the only input element (A number input that will be used for conversion), in a variable called numberInput,  the only button element in a variable called convertBtn, and the only output element in a variable called result. 

Next, I'll do some setup to check the value in the number input element whenever the user clicks the Convert button. To start I will create an empty function called checkUserInput. I will test everything is working by loging the value attribute of numberInput to the console. Now that the checkUserInput function is set up for testing I will use an event listener to call the function when users click the Convert button. To do this I will chain A "click" .addEventListener() method to the converBtn and use the checkUserInput function as a callback function. 

The Convert button is now working, but it isn't very convenient for user to enter in a number and click the button every time. What's better is if they could utilise the Enter or Return key on their keyboard instead. The keydown event fires every time a user presses a key on their keyboard, and is a good way to add more interactivity to input elements. To utilise this keydown event, I will chain a "keydown" addEventListener to the numberInput element and pass an empty arrow function. 

Whenever an event listener is triggered by an event, an event object is created automatically. You don't always need to use this object, like a click handler, but it can be useful to access information aobut the event that was triggered. To utilise this even object I will pass e as a paramter to the callback function (Remember that "e" is a common parameter name for the event object. Next, I will log "e" to the console in the body of my callback function. If you open your browser's console and type in the number input, you'll see event objects logged to the browser. And if you look at on those event objects, you'll see helpful properties like type and target. Since I want to perform an action when the "Enter" key is pressed the most helpful property is "key", which tells the string value of the key that was pressed. I will remove the console.log and add an if statement in its place. The if statement will check if e.key is equal to the string "Enter". If this is true I will call the checkUserInput function. 

I will now complete the checkUserInput function. I want to alert users if they don't enter a value into the number input, or the number they enter is invalid. The input type="number" element returns a string. With that in mind, in the checkUserInput function I will write an if statement to check if the value in the numberInput is an empty string (meaning the user didn't punch in a value). I will then change the if statement's expression to !numberInput.value. Without the explanations mark, the code block would run if the expression is true. Meaning, there is a value in the numberInput. But with the explanation mark the code block will run if there isn't a value in the numberInput. 

I will add a second expression requirment to the if statement with the || operator. The second expression will check weather the value in the number input is a whole number or not. To check this I will pass numberInput.value into the parseInt() function. This will then be passed into the isNan function which will return true if the parseInt function returns NaN. If the parseInt function returns a whole number, The isNaN function will return false and the code block for the first if statement expression will not run. 



